// import * as affinityComponents from "@allied-solutions/affinity",
// // export const scope = {
// //   affinityComponents,
// // },
// export const scope = Object.entries(affinityComponents).reduce(
//   (acc, [key, value]) => {
//     return {
//       ...acc,
//       [key]: value,
//     },
//   },
//   {}
// ),

// import * as bob from "@allied-solutions/affinity", // Import bob obje
// // Iterate over the properties of bob
// for (const key in bob) {
//   if (Object.hasOwnProperty.call(bob, key)) {
//     const value = bob[key],
//     console.log(key),
//   }
// }
import { Form, Formik } from "formik";
import {
  $,
  $$,
  A,
  AffinityProvider,
  AlertGroup,
  Anchor,
  Article,
  Aside,
  Avatar,
  Badge,
  Blockquote,
  Box,
  Button,
  ButtonAnchor,
  ButtonDiv,
  ButtonGroup,
  ButtonUnstyled,
  Caption,
  Checkbox,
  Collapse,
  Combobox,
  Container,
  DatePicker,
  DatePickerInput,
  DateRangePicker,
  DateRangePickerInput,
  Dd,
  Dl,
  DownshiftProvider,
  Dropdown,
  Dt,
  DynamicIcon,
  Fieldset,
  FileUploader,
  FileUploaderFormik,
  Flex,
  FloatingTile,
  Footer,
  // Form,
  FormGroup,
  GlobalStyle,
  H1,
  H2,
  H3,
  H4,
  H5,
  H6,
  Header,
  HorizontalScroll,
  Hr,
  Icon,
  IconContainer,
  IconErrorBoundary,
  IdleTimeout,
  InlineAnchor,
  Input,
  InputGroup,
  InputGroupMoney,
  InputGroupNumber,
  InputGroupSearch,
  Label,
  Legend,
  Li,
  LoadingSpinner,
  Main,
  Masked,
  Modal,
  MoneyInput,
  Nav,
  NavLink,
  NavList,
  Notice,
  NumberInput,
  Ol,
  P,
  PaginationGroup,
  Paragraph,
  Phone,
  Pill,
  Popover,
  ProgressBar,
  ProgressIndicator,
  PureInputGroupNumber,
  Radio,
  RecentSearch,
  ReactTableStateProvider,
  ScreenReaderText,
  Section,
  Select,
  SelectedItem,
  SkeletonLoading,
  Slider,
  SliderInput,
  Span,
  SubmitButton,
  TBody,
  TFoot,
  THead,
  Table,
  TableGroup,
  Tabs,
  Td,
  Textarea,
  Th,
  Tile,
  Toggle,
  Tooltip,
  Tr,
  Ul,
  VerticalScroll,
  base64toBlob,
  blobToBase64,
  dateMask,
  fillArray,
  formatDollars,
  formatMoney,
  formatNumber,
  measureDomNode,
  mixins,
  shouldForwardProp,
  sleep,
  styleFns,
  textInputs,
  useAffinityContext,
  useAlertGroupContext,
  useDownshiftContext,
  useFileUploaderContext,
  useFormGroupContext,
  useInputGroupContext,
  useMeasureOnce,
  usePaginationGroupContext,
  useReactTableState,
  useSessionTimer,
  useSplitStyleProps,
  useTableGroupContext,
  useTabsContext,
  useTimer,
  useWindowWidth,
  validateStyleProps,
  withBadge,
  withDatePickerWrapper,
  withFormGroupContext,
  withGTMClick,
  withInputGroupContext,
  yupLocale,
} from "@allied-solutions/affinity";
export const scope = {
  $,
  $$,
  A,
  AffinityProvider,
  AlertGroup,
  Anchor,
  Article,
  Aside,
  Avatar,
  Badge,
  Blockquote,
  Box,
  Button,
  ButtonAnchor,
  ButtonDiv,
  ButtonGroup,
  ButtonUnstyled,
  Caption,
  Checkbox,
  Collapse,
  Combobox,
  Container,
  DatePicker,
  DatePickerInput,
  DateRangePicker,
  DateRangePickerInput,
  Dd,
  Dl,
  DownshiftProvider,
  Dropdown,
  Dt,
  DynamicIcon,
  Fieldset,
  FileUploader,
  FileUploaderFormik,
  Flex,
  FloatingTile,
  Footer,
  Form,
  Formik,
  FormGroup,
  GlobalStyle,
  H1,
  H2,
  H3,
  H4,
  H5,
  H6,
  Header,
  HorizontalScroll,
  Hr,
  Icon,
  IconContainer,
  IconErrorBoundary,
  IdleTimeout,
  InlineAnchor,
  Input,
  InputGroup,
  InputGroupMoney,
  InputGroupNumber,
  InputGroupSearch,
  Label,
  Legend,
  Li,
  LoadingSpinner,
  Main,
  Masked,
  Modal,
  MoneyInput,
  Nav,
  NavLink,
  NavList,
  Notice,
  NumberInput,
  Ol,
  P,
  PaginationGroup,
  Paragraph,
  Phone,
  Pill,
  Popover,
  ProgressBar,
  ProgressIndicator,
  PureInputGroupNumber,
  Radio,
  ReactTableStateProvider,
  RecentSearch,
  ScreenReaderText,
  Section,
  Select,
  SelectedItem,
  SkeletonLoading,
  Slider,
  SliderInput,
  Span,
  SubmitButton,
  TBody,
  TFoot,
  THead,
  Table,
  TableGroup,
  Tabs,
  Td,
  Textarea,
  Th,
  Tile,
  Toggle,
  Tooltip,
  Tr,
  Ul,
  VerticalScroll,
  base64toBlob,
  blobToBase64,
  dateMask,
  fillArray,
  formatDollars,
  formatMoney,
  formatNumber,
  measureDomNode,
  mixins,
  shouldForwardProp,
  sleep,
  styleFns,
  textInputs,
  useAffinityContext,
  useAlertGroupContext,
  useDownshiftContext,
  useFileUploaderContext,
  useFormGroupContext,
  useInputGroupContext,
  useMeasureOnce,
  usePaginationGroupContext,
  useReactTableState,
  useSessionTimer,
  useSplitStyleProps,
  useTableGroupContext,
  useTabsContext,
  useTimer,
  useWindowWidth,
  validateStyleProps,
  withBadge,
  withDatePickerWrapper,
  withFormGroupContext,
  withGTMClick,
  withInputGroupContext,
  yupLocale,
};
